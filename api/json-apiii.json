{
  "openapi": "3.0.3",
  "info": {
    "title": "Golang Developer Technical Test",
    "description": "golang Developer Technical Test",
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": ""
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API Key is missing"
          },
          "400": {
            "description": "Credit card data invalid"
          },
          "401": {
            "description": "Invalid API key"
          },
          "500": {
            "description": "Something went wrong. Please try again later.\""
          }
        }
      }
    },
    "/user/list": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User List",
        "description": "",
        "operationId": "get user list ",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "number",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get list of contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "schema": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    },
                    "paging": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number"
                        },
                        "size": {
                          "type": "number"
                        },
                        "total_item": {
                          "type": "number"
                        },
                        "total_page": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },

    "/user/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user id",
        "description": "",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {

          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API Key is missing"
          },
          "400": {
            "description": "Invalid fields type"
          },
          "401": {
            "description": "Invalid API key.\""
          },
          "500": {
            "description": "Something went wrong. Please try again later.\""
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "name that need to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                      "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "403": {
              "description": "API Key is missing"
            },
            "400": {
              "description": "Invalid fields type"
            },
            "401": {
              "description": "Invalid API key.\""
            },
            "500": {
              "description": "Something went wrong. Please try again later.\""
            }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "theUser"
          },
          "address": {
            "type": "string",
            "example": "jalan fifa, no 8 , JAKARTA"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "photos": {
            "type": "object",
            "properties": {
              "1" : {"type": "string"},
              "2" : {"type": "string"}
            }
          },
          "creditcard": {
            "type": "object",
            "properties": {
              "type" : {"type": "string"},
              "number" : {"type": "string"},
              "name" : {"type": "string"},
              "expired" : {"type": "string"},
              "cvv": {
                "type": "string"
              }
            }
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "requestBodies": {
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    }
  }
}